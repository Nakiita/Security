{"ast":null,"code":"import axios from \"axios\";\nconst Api = axios.create({\n  baseURL: \"http://localhost:5000\",\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n    authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  }\n};\n\n//Creating  test\nexport const testApi = () => Api.get(\"/test\");\n//  Creating register api\nexport const registerApi = data => Api.post(\"/api/user/register\", data);\n\n// Create login api\nexport const loginApi = data => Api.post(\"/api/user/login\", data);\n//forgot password\nexport const forgotPasswordApi = data => Api.post(\"/api/user/forgot/password\", data);\n\n//reset password\nexport const resetPasswordApi = (data, token) => Api.put(`/api/user/password/reset/${token}`, data);\nexport const getAllUsersApi = () => Api.get(\"/api/user/getUsers\");\nexport const getPagination = currentPage => Api.get(`/api/user/getPagination?page=${currentPage}`);\nexport const getSingleUserApi = id => Api.get(`/api/user/getUser/${id}`);\nexport const deleteUserApi = id => Api.delete(`/api/user/deleteUser/${id}`, config);\n\n// Create doctor api\nexport const createDoctorApi = formData => Api.post(\"/api/doctor/create_doctor\", formData, config);\n\n//  Get doctor api\nexport const getAllDoctorsApi = () => Api.get(\"/api/doctor/get_doctors\");\n\n// Get single doctor api\nexport const getSingleDoctorApi = id => Api.get(`/api/doctor/get_doctor/${id}`);\n\n//update doctor\nexport const updateDoctorApi = (id, formData) => Api.put(`/api/doctor/update_doctor/${id}`, formData, config);\n\n//delete doctor\nexport const deleteDoctorApi = id => Api.delete(`/api/doctor/delete_doctor/${id}`, config);\nexport const getPaginationApi = currentPage => Api.get(`/api/doctor/getPagination?page=${currentPage}`);\n\n// Book Appointment\nexport const bookappointmentApi = data => Api.post(`api/appointment/bookappointment`, data);\nexport const getAppointments = () => Api.get(\"/api/appointment/getappointment\");\nexport const deleteAppointmentApi = id => Api.delete(`/api/appointment/deleteAppointment/${id}`, config);\nexport const getPaginationAppointmentApi = currentPage => Api.get(`/api/appointment/getPagination?page=${currentPage}`);","map":{"version":3,"names":["axios","Api","create","baseURL","withCredentials","config","headers","authorization","localStorage","getItem","testApi","get","registerApi","data","post","loginApi","forgotPasswordApi","resetPasswordApi","token","put","getAllUsersApi","getPagination","currentPage","getSingleUserApi","id","deleteUserApi","delete","createDoctorApi","formData","getAllDoctorsApi","getSingleDoctorApi","updateDoctorApi","deleteDoctorApi","getPaginationApi","bookappointmentApi","getAppointments","deleteAppointmentApi","getPaginationAppointmentApi"],"sources":["C:/Users/nakita/Desktop/Doctor Appointment for Security/frontend/src/apis/Api.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst Api = axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  withCredentials: true,\r\n});\r\nconst config = {\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n    authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n  },\r\n};\r\n\r\n//Creating  test\r\nexport const testApi = () => Api.get(\"/test\");\r\n//  Creating register api\r\nexport const registerApi = (data) => Api.post(\"/api/user/register\", data);\r\n\r\n// Create login api\r\nexport const loginApi = (data) => Api.post(\"/api/user/login\", data);\r\n//forgot password\r\nexport const forgotPasswordApi = (data) =>\r\n  Api.post(\"/api/user/forgot/password\", data);\r\n\r\n//reset password\r\nexport const resetPasswordApi = (data, token) =>\r\n  Api.put(`/api/user/password/reset/${token}`, data);\r\n\r\nexport const getAllUsersApi = () => Api.get(\"/api/user/getUsers\");\r\n\r\nexport const getPagination = (currentPage) =>\r\n  Api.get(`/api/user/getPagination?page=${currentPage}`);\r\n\r\nexport const getSingleUserApi = (id) => Api.get(`/api/user/getUser/${id}`);\r\n\r\nexport const deleteUserApi = (id) =>\r\n  Api.delete(`/api/user/deleteUser/${id}`, config);\r\n\r\n// Create doctor api\r\nexport const createDoctorApi = (formData) =>\r\n  Api.post(\"/api/doctor/create_doctor\", formData, config);\r\n\r\n//  Get doctor api\r\nexport const getAllDoctorsApi = () => Api.get(\"/api/doctor/get_doctors\");\r\n\r\n// Get single doctor api\r\nexport const getSingleDoctorApi = (id) =>\r\n  Api.get(`/api/doctor/get_doctor/${id}`);\r\n\r\n//update doctor\r\nexport const updateDoctorApi = (id, formData) =>\r\n  Api.put(`/api/doctor/update_doctor/${id}`, formData, config);\r\n\r\n//delete doctor\r\nexport const deleteDoctorApi = (id) =>\r\n  Api.delete(`/api/doctor/delete_doctor/${id}`, config);\r\n\r\nexport const getPaginationApi = (currentPage) =>\r\n  Api.get(`/api/doctor/getPagination?page=${currentPage}`);\r\n\r\n// Book Appointment\r\nexport const bookappointmentApi = (data) =>\r\n  Api.post(`api/appointment/bookappointment`, data);\r\n\r\nexport const getAppointments = () => Api.get(\"/api/appointment/getappointment\");\r\n\r\nexport const deleteAppointmentApi = (id) =>\r\n  Api.delete(`/api/appointment/deleteAppointment/${id}`, config);\r\n\r\nexport const getPaginationAppointmentApi = (currentPage) =>\r\n  Api.get(`/api/appointment/getPagination?page=${currentPage}`);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}